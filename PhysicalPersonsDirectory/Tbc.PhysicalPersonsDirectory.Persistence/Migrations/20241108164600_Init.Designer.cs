// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tbc.PhysicalPersonsDirectory.Persistence.Contexts;

#nullable disable

namespace Tbc.PhysicalPersonsDirectory.Persistence.Migrations
{
    [DbContext(typeof(PhysicalPersonsContext))]
    [Migration("20241108164600_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.CityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "თბილისი"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ბათუმი"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ქუთაისი"
                        },
                        new
                        {
                            Id = 4,
                            Name = "რუსთავი"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ზუგდიდი"
                        },
                        new
                        {
                            Id = 6,
                            Name = "გორი"
                        },
                        new
                        {
                            Id = 7,
                            Name = "თელავი"
                        },
                        new
                        {
                            Id = 8,
                            Name = "ზესტაფონი"
                        },
                        new
                        {
                            Id = 9,
                            Name = "თერჯოლა"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ახალციხე"
                        });
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhoneNumberEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PhysicalPersonEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("PhysicalPersonEntityId");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhysicalPersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("MinAge", 18);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2)
                        .HasAnnotation("RegularExpression", "^(?:[ა-ჰ]+|[A-Za-z]+)$");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2)
                        .HasAnnotation("RegularExpression", "^(?:[ა-ჰ]+|[A-Za-z]+)$");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength()
                        .HasAnnotation("RegularExpression", "^\\d{11}$");

                    b.Property<string>("PicturePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("PersonalNumber")
                        .IsUnique();

                    b.ToTable("PhysicalPersons");
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.RelatedPerson", b =>
                {
                    b.Property<int>("PhysicalPersonEntityId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("PhysicalPersonEntityId", "RelatedEntityId");

                    b.HasIndex("RelatedEntityId");

                    b.ToTable("RelatedPersons");
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhoneNumberEntity", b =>
                {
                    b.HasOne("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhysicalPersonEntity", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhysicalPersonEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhysicalPersonEntity", b =>
                {
                    b.HasOne("Tbc.PhysicalPersonsDirectory.Domain.Entities.CityEntity", null)
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.RelatedPerson", b =>
                {
                    b.HasOne("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhysicalPersonEntity", "PhysicalPersonEntity")
                        .WithMany("RelatedPersons")
                        .HasForeignKey("PhysicalPersonEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhysicalPersonEntity", "RelatedEntity")
                        .WithMany()
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhysicalPersonEntity");

                    b.Navigation("RelatedEntity");
                });

            modelBuilder.Entity("Tbc.PhysicalPersonsDirectory.Domain.Entities.PhysicalPersonEntity", b =>
                {
                    b.Navigation("PhoneNumbers");

                    b.Navigation("RelatedPersons");
                });
#pragma warning restore 612, 618
        }
    }
}
